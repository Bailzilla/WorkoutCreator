{"version":3,"sources":["lifts.js","Card.js","App.js","reportWebVitals.js","index.js"],"names":["lifts","type","name","src","Card","pic","className","alt","App","rando","Math","floor","random","useState","resPic","setResPic","resName","setResName","addLift","value","result","filter","lift","id","onClick","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","fetch","response","json","data","innerHTML","length","text","author"],"mappings":"sOAAaA,G,MAAQ,CACjB,CACIC,KAAM,OACNC,KAAM,MACNC,IAAK,mBAET,CACIF,KAAM,OACNC,KAAM,UACNC,IAAK,qBAET,CACIF,KAAM,OACNC,KAAM,oBACNC,IAAK,8BAET,CACIF,KAAM,OACNC,KAAM,gBACNC,IAAK,oBAET,CACIF,KAAM,OACNC,KAAM,iBACNC,IAAK,4BAET,CACIF,KAAM,OACNC,KAAM,SACNC,IAAK,qBAET,CACIF,KAAM,OACNC,KAAM,eACNC,IAAK,0BAET,CACIF,KAAM,OACNC,KAAM,gBACNC,IAAK,sBACN,CACCF,KAAM,OACNC,KAAM,UACNC,IAAK,sBAET,CACIF,KAAM,OACNC,KAAM,OACNC,IAAK,mBAET,CACIF,KAAM,WACNC,KAAM,QACNC,IAAK,oBAET,CACIF,KAAM,WACNC,KAAM,kBACNC,IAAK,wBAET,CACIF,KAAM,WACNC,KAAM,aACNC,IAAK,wBAET,CACIF,KAAM,WACNC,KAAM,UACNC,IAAK,qBAET,CACIF,KAAM,WACNC,KAAM,SACNC,IAAK,qBAET,CACIF,KAAM,YACNC,KAAM,WACNC,IAAK,uBAET,CACIF,KAAM,YACNC,KAAM,aACNC,IAAK,uBAET,CACIF,KAAM,YACNC,KAAM,MACNC,IAAK,kBAET,CACIF,KAAM,YACNC,KAAM,kBACNC,IAAK,oBAET,CACIF,KAAM,YACNC,KAAM,WACNC,IAAK,yBCrFEC,G,MATF,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,IAAKH,EAAW,EAAXA,KACjB,OACI,sBAAKI,UAAU,sDAAf,UACI,qBAAKC,IAAKL,EAAMC,IAAKE,IACrB,6BAAKH,SCiCFM,MAnCf,WAEE,IAAMC,EAAQC,KAAKC,MAAsB,EAAhBD,KAAKE,UAFjB,EAKbC,mBAAS,0IALI,mBAINC,EAJM,KAIEC,EAJF,OAMiBF,mBAAS,WAN1B,mBAMNG,EANM,KAMGC,EANH,KASb,SAASC,EAAQC,GACf,IAAMC,EAASpB,EAAMqB,QAAO,SAAAC,GAAI,OAAIA,EAAKrB,OAASkB,KAClDJ,EAAUK,EAAOX,GAAON,KACxBc,EAAWG,EAAOX,GAAOP,MAG3B,OACE,sBAAKI,UAAU,KAAf,UACE,oBAAIiB,GAAG,QAAP,eAEA,sBAAKjB,UAAU,aAAf,UACE,wBAAQA,UAAU,6BAA6Ba,MAAM,OAAOK,QAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOP,QAA9F,oCACA,wBAAQb,UAAU,6BAA6Ba,MAAM,OAAOK,QAAS,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOP,QAA7F,oCACA,wBAAQb,UAAU,6BAA6Ba,MAAM,WAAWK,QAAS,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOP,QAAjG,oDACA,wBAAQb,UAAU,6BAA6Ba,MAAM,YAAYK,QAAS,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOP,QAAlG,uDAGF,4FAGA,cAAC,EAAD,CAAMd,IAAKS,EAAQZ,KAAMc,QCvBhBW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1BC,MAAM,+BACHX,MAAK,SAAAY,GAAQ,OAAIA,EAASC,UAC1Bb,MAAK,SAAAc,GAAI,OAAIL,SAASC,eAAe,SAASK,UAAW,IAAKD,EAAKlC,KAAKC,MAAMD,KAAKE,SAAWgC,EAAKE,SAASC,KAAM,OAASH,EAAKlC,KAAKC,MAAMD,KAAKE,SAAWgC,EAAKE,SAASE,UAO5KrB,M","file":"static/js/main.a36a2981.chunk.js","sourcesContent":["export const lifts = [\r\n    {\r\n        type: 'push',\r\n        name: 'Dip',\r\n        src: './pics/dips.png'\r\n    },\r\n    {\r\n        type: 'push',\r\n        name: 'Push-up',\r\n        src: './pics/pushup.jpg'\r\n    },\r\n    {\r\n        type: 'push',\r\n        name: 'Wide Grip Push-up',\r\n        src: './pics/widegrippushups.jpg'\r\n    },\r\n    {\r\n        type: 'push',\r\n        name: 'Cobra Push-up',\r\n        src: './pics/cobra.jpg'\r\n    },\r\n    {\r\n        type: 'push',\r\n        name: 'Overhead Press',\r\n        src: './pics/overheadpress.jpg'\r\n    },\r\n    {\r\n        type: 'pull',\r\n        name: 'Pullup',\r\n        src: './pics/pullup.jpg' \r\n    },\r\n    {\r\n        type: 'pull',\r\n        name: 'Inverted Row',\r\n        src: './pics/invertedrow.png'\r\n    },\r\n    {\r\n        type: 'pull',\r\n        name: 'Bent Over Row',\r\n        src: './pics/bentrow.jpg'\r\n    }, {\r\n        type: 'pull',\r\n        name: 'Chin-up',\r\n        src: './pics/chinups.png'\r\n    },\r\n    {\r\n        type: 'pull',\r\n        name: 'Curl',\r\n        src: './pics/curl.jpg'\r\n    },\r\n    {\r\n        type: 'anterior',\r\n        name: 'Squat',\r\n        src: './pics/squat.jpg'\r\n    },\r\n    {\r\n        type: 'anterior',\r\n        name: 'Bulgarian Squat',\r\n        src: './pics/bulgarian.jpg'\r\n    },\r\n    {\r\n        type: 'anterior',\r\n        name: 'Side Lunge',\r\n        src: './pics/sidelunge.png'\r\n    },\r\n    {\r\n        type: 'anterior',\r\n        name: 'Step-up',\r\n        src: './pics/stepup.jpg'\r\n    },\r\n    {\r\n        type: 'anterior',\r\n        name: 'Pistol',\r\n        src: './pics/pistol.jpg'\r\n    },\r\n    {\r\n        type: 'posterior',\r\n        name: 'Deadlift',\r\n        src: './pics/deadlift.png'\r\n    },\r\n    {\r\n        type: 'posterior',\r\n        name: 'Hip Bridge',\r\n        src: './pics/hiphinge.jpg'\r\n    },\r\n    {\r\n        type: 'posterior',\r\n        name: 'RDL',\r\n        src: './pics/rdl.jpg'\r\n    },\r\n    {\r\n        type: 'posterior',\r\n        name: 'Hyper Extension',\r\n        src: './pics/hyper.jpg'\r\n    },\r\n    {\r\n        type: 'posterior',\r\n        name: 'Superman',\r\n        src: './pics/superman.jpg'\r\n    }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Card.css'\r\n\r\n// takes a pic and name, returns a new component to display the data\r\nconst Card = ({ pic, name }) => {\r\n    return (\r\n        <div className='tc grow bg-light-green br3 pa3 ma1 dib bw1 shadow-5'>\r\n            <img alt={name} src={pic}/>            \r\n            <h3>{name}</h3>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import './App.css';\nimport { lifts } from './lifts';\nimport React, {useState} from 'react'\nimport Card from './Card'\n\n\nfunction App() {\n\n  const rando = Math.floor(Math.random() * 5)  \n  // setting the initial state for image and name\n  const [resPic, setResPic] = \n  useState('https://images.unsplash.com/photo-1579364046732-c21c2177730d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80')\n  const [resName, setResName] = useState('Welcome')\n  \n  // runs anytime a button is clicked\n  function addLift(value){\n    const result = lifts.filter(lift => lift.type === value)\n    setResPic(result[rando].src)\n    setResName(result[rando].name)    \n   }\n\n  return (\n    <div className='tc'>\n      <h2 id='quote'> </h2>\n\n      <div className='button-box'>        \n        <button className='button grow bg-light-green' value='push' onClick= {(e) => addLift(e.target.value)}>Select a push exercise</button>\n        <button className='button grow bg-light-green' value=\"pull\" onClick={(e) => addLift(e.target.value)}>Select a pull exercise</button>\n        <button className='button grow bg-light-green' value=\"anterior\" onClick={(e) => addLift(e.target.value)}>Select an anterior lower body exercise</button>\n        <button className='button grow bg-light-green' value=\"posterior\" onClick={(e) => addLift(e.target.value)}>Select a posterior lower body exercise</button>        \n      </div>\n\n      <h6>please choose no more than 1 of the same exercise in a row</h6>\n\n      {/* calling our new component and passing the image and name values */}\n      <Card pic={resPic} name={resName}/>\n\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//API call returns an array of motivational quotes. One is chosen at random and then is displayed in the quote div along with the author and propper formatting for a quotation\n\nfetch(\"https://type.fit/api/quotes\")\n  .then(response => response.json())\n  .then(data => document.getElementById('quote').innerHTML=('\"'+(data[Math.floor(Math.random() * data.length)].text)+'\" - '+ (data[Math.floor(Math.random() * data.length)].author)))\n \n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n"],"sourceRoot":""}